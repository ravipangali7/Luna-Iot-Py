# Generated by Django 5.2.5 on 2025-09-17 10:02

import django.contrib.auth.models
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=100, unique=True)),
                ('phone', models.CharField(max_length=100, unique=True)),
                ('email', models.EmailField(blank=True, max_length=100, null=True)),
                ('name', models.CharField(blank=True, max_length=100, null=True)),
                ('fcm_token', models.CharField(blank=True, db_column='fcm_token', max_length=500, null=True)),
                ('token', models.CharField(blank=True, max_length=500, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updated_at', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=100)),
                ('otp', models.CharField(max_length=6)),
                ('expiresAt', models.DateTimeField(db_column='expires_at')),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='created_at')),
            ],
            options={
                'db_table': 'otps',
                'indexes': [models.Index(fields=['phone'], name='otps_phone_470244_idx')],
            },
        ),
        migrations.CreateModel(
            name='UserPermission',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userpermissions', to='auth.permission')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userpermission_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'user_permissions',
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone', 'username', 'fcm_token'], name='users_phone_e002b4_idx'),
        ),
        migrations.AddIndex(
            model_name='userpermission',
            index=models.Index(fields=['user', 'permission'], name='user_permis_user_id_d03feb_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='userpermission',
            unique_together={('user', 'permission')},
        ),
    ]
