# Generated by Django 5.2.5 on 2025-09-17 10:02

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('device', '0001_initial'),
        ('shared', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('imei', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('vehicleNo', models.CharField(db_column='vehicle_no', max_length=255)),
                ('vehicleType', models.CharField(choices=[('Ambulance', 'Ambulance'), ('Bike', 'Bike'), ('Boat', 'Boat'), ('Bulldozer', 'Bulldozer'), ('Bus', 'Bus'), ('Car', 'Car'), ('Crane', 'Crane'), ('Cycle', 'Cycle'), ('Dumper', 'Dumper'), ('Garbage', 'Garbage'), ('Jcb', 'JCB'), ('Jeep', 'Jeep'), ('Mixer', 'Mixer'), ('Mpv', 'MPV'), ('Pickup', 'Pickup'), ('SchoolBus', 'School Bus'), ('Suv', 'SUV'), ('Tanker', 'Tanker'), ('Tempo', 'Tempo'), ('Tractor', 'Tractor'), ('Train', 'Train'), ('Truck', 'Truck'), ('Van', 'Van')], db_column='vehicle_type', default='Car', max_length=20)),
                ('odometer', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mileage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimumFuel', models.DecimalField(db_column='minimum_fuel', decimal_places=2, max_digits=10)),
                ('speedLimit', models.IntegerField(db_column='speed_limit', default=60)),
                ('expireDate', models.DateTimeField(blank=True, db_column='expire_date', null=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('updatedAt', models.DateTimeField(auto_now=True, db_column='updated_at')),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='device.device', to_field='imei')),
            ],
            options={
                'db_table': 'vehicles',
            },
        ),
        migrations.CreateModel(
            name='UserVehicle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('isMain', models.BooleanField(db_column='is_main', default=False)),
                ('allAccess', models.BooleanField(db_column='all_access', default=False)),
                ('liveTracking', models.BooleanField(db_column='live_tracking', default=False)),
                ('history', models.BooleanField(default=False)),
                ('report', models.BooleanField(default=False)),
                ('vehicleProfile', models.BooleanField(db_column='vehicle_profile', default=False)),
                ('events', models.BooleanField(default=False)),
                ('geofence', models.BooleanField(default=False)),
                ('edit', models.BooleanField(default=False)),
                ('shareTracking', models.BooleanField(db_column='share_tracking', default=False)),
                ('notification', models.BooleanField(default=True)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userVehicles', to=settings.AUTH_USER_MODEL)),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userVehicles', to='fleet.vehicle')),
            ],
            options={
                'db_table': 'user_vehicles',
            },
        ),
        migrations.CreateModel(
            name='GeofenceVehicle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('createdAt', models.DateTimeField(auto_now_add=True, db_column='created_at')),
                ('geofence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='shared.geofence')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofences', to='fleet.vehicle')),
            ],
            options={
                'db_table': 'geofence_vehicles',
            },
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['imei'], name='vehicles_imei_892831_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['vehicleType'], name='vehicles_vehicle_d54349_idx'),
        ),
        migrations.AddIndex(
            model_name='vehicle',
            index=models.Index(fields=['createdAt'], name='vehicles_created_b41437_idx'),
        ),
        migrations.AddIndex(
            model_name='uservehicle',
            index=models.Index(fields=['user'], name='user_vehicl_user_id_f17eee_idx'),
        ),
        migrations.AddIndex(
            model_name='uservehicle',
            index=models.Index(fields=['vehicle'], name='user_vehicl_vehicle_b54058_idx'),
        ),
        migrations.AddIndex(
            model_name='uservehicle',
            index=models.Index(fields=['user', 'isMain'], name='user_vehicl_user_id_406742_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='uservehicle',
            unique_together={('user', 'vehicle')},
        ),
        migrations.AlterUniqueTogether(
            name='geofencevehicle',
            unique_together={('geofence', 'vehicle')},
        ),
    ]
