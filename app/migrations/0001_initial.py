# Generated by Django 5.2.5 on 2025-08-28 14:53

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Device',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('imei', models.CharField(max_length=15, unique=True)),
                ('phone', models.CharField(max_length=20)),
                ('sim', models.CharField(choices=[('NTC', 'NTC'), ('Ncell', 'Ncell')], max_length=10)),
                ('protocol', models.CharField(choices=[('GT06', 'GT06'), ('FMB003', 'FMB003')], default='GT06', max_length=10)),
                ('iccid', models.CharField(max_length=255)),
                ('model', models.CharField(choices=[('EC08', 'EC08'), ('VL149', 'VL149')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'devices',
            },
        ),
        migrations.CreateModel(
            name='Geofence',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('type', models.CharField(choices=[('Entry', 'Entry'), ('Exit', 'Exit')], max_length=20)),
                ('boundary', models.JSONField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'geofences',
            },
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(choices=[('DEVICE_READ', 'Device Read'), ('DEVICE_CREATE', 'Device Create'), ('DEVICE_UPDATE', 'Device Update'), ('DEVICE_DELETE', 'Device Delete'), ('VEHICLE_READ', 'Vehicle Read'), ('VEHICLE_CREATE', 'Vehicle Create'), ('VEHICLE_UPDATE', 'Vehicle Update'), ('VEHICLE_DELETE', 'Vehicle Delete'), ('LOCATION_READ', 'Location Read'), ('LOCATION_HISTORY', 'Location History'), ('STATUS_READ', 'Status Read'), ('STATUS_HISTORY', 'Status History'), ('USER_READ', 'User Read'), ('USER_CREATE', 'User Create'), ('USER_UPDATE', 'User Update'), ('USER_DELETE', 'User Delete'), ('ROLE_READ', 'Role Read'), ('ROLE_CREATE', 'Role Create'), ('ROLE_UPDATE', 'Role Update'), ('ROLE_DELETE', 'Role Delete'), ('SYSTEM_ADMIN', 'System Admin'), ('DEVICE_MONITORING', 'Device Monitoring'), ('LIVE_TRACKING', 'Live Tracking')], max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'permissions',
            },
        ),
        migrations.CreateModel(
            name='Popup',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('image', models.CharField(blank=True, max_length=500, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'popups',
            },
        ),
        migrations.CreateModel(
            name='Role',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=100, unique=True)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'roles',
            },
        ),
        migrations.CreateModel(
            name='Otp',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('phone', models.CharField(max_length=100)),
                ('otp', models.CharField(max_length=6)),
                ('expires_at', models.DateTimeField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'otps',
                'indexes': [models.Index(fields=['phone'], name='otps_phone_470244_idx')],
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('name', models.CharField(db_column='first_name', max_length=100)),
                ('phone', models.CharField(max_length=100, unique=True)),
                ('password', models.CharField(max_length=255)),
                ('token', models.CharField(blank=True, max_length=500, null=True, unique=True)),
                ('fcm_token', models.CharField(blank=True, max_length=500, null=True)),
                ('status', models.CharField(choices=[('ACTIVE', 'Active'), ('INACTIVE', 'Inactive'), ('SUSPENDED', 'Suspended')], default='ACTIVE', max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('role', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='users', to='app.role')),
            ],
            options={
                'db_table': 'users',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('title', models.CharField(max_length=255)),
                ('message', models.TextField()),
                ('type', models.CharField(choices=[('all', 'All'), ('specific', 'Specific')], max_length=20)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('sent_by', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sentNotifications', to='app.user')),
            ],
            options={
                'db_table': 'notifications',
            },
        ),
        migrations.CreateModel(
            name='GeofenceUser',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('geofence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='users', to='app.geofence')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofences', to='app.user')),
            ],
            options={
                'db_table': 'geofence_users',
            },
        ),
        migrations.CreateModel(
            name='UserDevice',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userDevices', to='app.device')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userDevices', to='app.user')),
            ],
            options={
                'db_table': 'user_devices',
            },
        ),
        migrations.CreateModel(
            name='UserNotification',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_read', models.BooleanField(default=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('notification', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userNotifications', to='app.notification')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userNotifications', to='app.user')),
            ],
            options={
                'db_table': 'user_notifications',
            },
        ),
        migrations.CreateModel(
            name='Vehicle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('imei', models.CharField(max_length=15, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('vehicle_no', models.CharField(max_length=255)),
                ('vehicle_type', models.CharField(choices=[('Ambulance', 'Ambulance'), ('Bike', 'Bike'), ('Boat', 'Boat'), ('Bulldozer', 'Bulldozer'), ('Bus', 'Bus'), ('Car', 'Car'), ('Crane', 'Crane'), ('Cycle', 'Cycle'), ('Dumper', 'Dumper'), ('Garbage', 'Garbage'), ('Jcb', 'JCB'), ('Jeep', 'Jeep'), ('Mixer', 'Mixer'), ('Mpv', 'MPV'), ('Pickup', 'Pickup'), ('SchoolBus', 'School Bus'), ('Suv', 'SUV'), ('Tanker', 'Tanker'), ('Tempo', 'Tempo'), ('Tractor', 'Tractor'), ('Train', 'Train'), ('Truck', 'Truck'), ('Van', 'Van')], default='Car', max_length=20)),
                ('odometer', models.DecimalField(decimal_places=2, max_digits=10)),
                ('mileage', models.DecimalField(decimal_places=2, max_digits=10)),
                ('minimum_fuel', models.DecimalField(decimal_places=2, max_digits=10)),
                ('speed_limit', models.IntegerField(default=60)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='app.device')),
            ],
            options={
                'db_table': 'vehicles',
            },
        ),
        migrations.CreateModel(
            name='UserVehicle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('is_main', models.BooleanField(default=False)),
                ('all_access', models.BooleanField(default=False)),
                ('live_tracking', models.BooleanField(default=False)),
                ('history', models.BooleanField(default=False)),
                ('report', models.BooleanField(default=False)),
                ('vehicle_profile', models.BooleanField(default=False)),
                ('events', models.BooleanField(default=False)),
                ('geofence', models.BooleanField(default=False)),
                ('edit', models.BooleanField(default=False)),
                ('share_tracking', models.BooleanField(default=False)),
                ('notification', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userVehicles', to='app.user')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='userVehicles', to='app.vehicle')),
            ],
            options={
                'db_table': 'user_vehicles',
            },
        ),
        migrations.CreateModel(
            name='GeofenceVehicle',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('geofence', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vehicles', to='app.geofence')),
                ('vehicle', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='geofences', to='app.vehicle')),
            ],
            options={
                'db_table': 'geofence_vehicles',
            },
        ),
        migrations.CreateModel(
            name='Location',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('imei', models.CharField(max_length=15)),
                ('latitude', models.DecimalField(decimal_places=8, max_digits=10)),
                ('longitude', models.DecimalField(decimal_places=8, max_digits=11)),
                ('speed', models.IntegerField()),
                ('course', models.IntegerField()),
                ('real_time_gps', models.BooleanField()),
                ('satellite', models.IntegerField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='locations', to='app.device')),
            ],
            options={
                'db_table': 'locations',
                'indexes': [models.Index(fields=['imei'], name='locations_imei_29cb5e_idx'), models.Index(fields=['created_at'], name='locations_created_146821_idx'), models.Index(fields=['latitude', 'longitude'], name='locations_latitud_4052bd_idx')],
            },
        ),
        migrations.CreateModel(
            name='RolePermission',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('permission', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='roles', to='app.permission')),
                ('role', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='permissions', to='app.role')),
            ],
            options={
                'db_table': 'role_permissions',
                'unique_together': {('role', 'permission')},
            },
        ),
        migrations.CreateModel(
            name='Status',
            fields=[
                ('id', models.BigAutoField(primary_key=True, serialize=False)),
                ('imei', models.CharField(max_length=15)),
                ('battery', models.IntegerField()),
                ('signal', models.IntegerField()),
                ('ignition', models.BooleanField()),
                ('charging', models.BooleanField()),
                ('relay', models.BooleanField()),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('device', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='statuses', to='app.device')),
            ],
            options={
                'db_table': 'statuses',
                'indexes': [models.Index(fields=['imei'], name='statuses_imei_e1b40f_idx'), models.Index(fields=['created_at'], name='statuses_created_e42e12_idx')],
            },
        ),
        migrations.AddIndex(
            model_name='user',
            index=models.Index(fields=['phone', 'token', 'status'], name='users_phone_5fe034_idx'),
        ),
        migrations.AddIndex(
            model_name='notification',
            index=models.Index(fields=['type', 'created_at'], name='notificatio_type_cb6908_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='geofenceuser',
            unique_together={('geofence', 'user')},
        ),
        migrations.AlterUniqueTogether(
            name='userdevice',
            unique_together={('user', 'device')},
        ),
        migrations.AddIndex(
            model_name='usernotification',
            index=models.Index(fields=['user', 'is_read'], name='user_notifi_user_id_ea6762_idx'),
        ),
        migrations.AlterUniqueTogether(
            name='usernotification',
            unique_together={('user', 'notification')},
        ),
        migrations.AlterUniqueTogether(
            name='uservehicle',
            unique_together={('user', 'vehicle')},
        ),
        migrations.AlterUniqueTogether(
            name='geofencevehicle',
            unique_together={('geofence', 'vehicle')},
        ),
    ]
